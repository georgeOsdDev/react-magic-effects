{"name":"React-magic-effects","tagline":"Magical effects for react components","body":"# react-magic-effects [![Build Status](https://travis-ci.org/georgeOsdDev/react-magic-effects.svg?branch=develop)](https://travis-ci.org/georgeOsdDev/react-magic-effects) [![npm version](https://badge.fury.io/js/react-magic-effects.svg)](http://badge.fury.io/js/react-magic-effects)\r\n\r\nMagical effects for react components\r\nInspired by [magic](https://github.com/miniMAC/magic).\r\n\r\n[![https://gyazo.com/ee58db0f8e77abbe08e68c63cfbc9ad0](https://i.gyazo.com/ee58db0f8e77abbe08e68c63cfbc9ad0.gif)](https://gyazo.com/ee58db0f8e77abbe08e68c63cfbc9ad0)\r\n\r\n## Demo\r\n\r\n[View Demo](http://georgeosddev.github.io/react-magic-effects/example/)\r\n\r\n## Installation\r\n\r\n```bash\r\nnpm install --save react-magic-effects\r\n```\r\n\r\n## API\r\n\r\n### `EffectContainer`\r\n\r\n#### Props\r\n\r\n```javascript\r\nEffectContainer.propTypes = {\r\n  effect: React.PropTypes.func, // some default effects are available from `Effects`\r\n  duration: React.PropTypes.number, //second\r\n  loop: React.PropTypes.bool, // animation will be looped after 60 frame * duration\r\n  autoPlay: React.PropTypes.bool // animation will be started after `componentDidMount` and `componentDidUpdate`,\r\n  onAnimationEnd: React.PropTypes.func // called when animation end\r\n};\r\n```\r\n\r\n#### Available Effects\r\n\r\nThese effects is available from `Effects`.\r\n\r\n##### Magic effects\r\n\r\n  * magic\r\n  * twisterInDown\r\n  * twisterInUp\r\n  * swap\r\n\r\n##### Bling\r\n\r\n  * puffIn\r\n  * puffOut\r\n  * vanishIn\r\n  * vanishOut\r\n\r\n##### Static Effects\r\n\r\n  * openDownLeft\r\n  * openDownLeftRetourn\r\n  * openDownRight\r\n  * openDownRightRetourn\r\n  * openUpLeft\r\n  * openUpLeftRetourn\r\n  * openUpRight\r\n  * openUpRightRetourn\r\n\r\n##### Static Effects Out\r\n  * openDownLeftOut\r\n  * openDownRightOut\r\n  * openUpLeftOut\r\n  * openUpRightOut\r\n\r\n##### Perspective\r\n\r\n  * perspectiveDown\r\n  * perspectiveDownRetourn\r\n  * perspectiveLeft\r\n  * perspectiveLeftRetourn\r\n  * perspectiveRight\r\n  * perspectiveRightRetourn\r\n  * perspectiveUp\r\n  * perspectiveUpRetourn\r\n\r\n##### Rotate\r\n\r\n  * rotateDown\r\n  * rotateLeft\r\n  * rotateRight\r\n  * rotateUp\r\n\r\n##### Slide\r\n\r\n  * slideDown\r\n  * slideDownRetourn\r\n  * slideLeft\r\n  * slideLeftRetourn\r\n  * slideRight\r\n  * slideRightRetourn\r\n  * slideUp\r\n  * slideUpRetourn\r\n\r\n##### Math\r\n\r\n  * swashIn\r\n  * swashOut\r\n  * foolishIn\r\n  * foolishOut\r\n  * holeOut\r\n\r\n##### Tin\r\n\r\n  * tinDownIn\r\n  * tinDownOut\r\n  * tinLeftIn\r\n  * tinLeftOut\r\n  * tinRightIn\r\n  * tinRightOut\r\n  * tinUpIn\r\n  * tinUpOut\r\n\r\n##### Bomb\r\n\r\n  * bombLeftOut\r\n  * bombRightOut\r\n\r\n##### Boing\r\n\r\n  * boingInUp\r\n  * boingOutDown\r\n\r\n##### On the Space\r\n\r\n  * spaceInDown\r\n  * spaceInLeft\r\n  * spaceInRight\r\n  * spaceInUp\r\n  * spaceOutDown\r\n  * spaceOutLeft\r\n  * spaceOutRight\r\n  * spaceOutUp\r\n\r\n##### Scale\r\n\r\n  * scaleIn\r\n  * scaleOut\r\n\r\n#### Custom Effect\r\n\r\nYou can apply your custom effect by using your own function.\r\n\r\n* `effect(progress) => {}`:\r\n\r\n  `progress` will be passed as number(0 to 100).\r\n\r\n  **return object should be in css format (Not React JSX style).**\r\n\r\n  ```\r\n  let myEffect = (progress) => {\r\n    let transform = `scale(${Effects.utils.one2Zero(progress)}, ${Effects.utils.one2Zero(progress)})`;\r\n\r\n    return {\r\n      '-webkit-transform': transform,\r\n      'transform': transform\r\n    };\r\n  }\r\n  ```\r\n\r\n#### Component API\r\n\r\n * `play`\r\n\r\n  Start animation.\r\n\r\n  ```\r\n  handlePlayButtonClick(){\r\n    this.refs.myAnimationContainer.play();\r\n  }\r\n  ```\r\n\r\n * `stop`\r\n\r\n   Stop animation.\r\n\r\n   ```\r\n   handlePauseButtonClick(){\r\n     this.refs.myAnimationContainer.stop();\r\n   }\r\n   ```\r\n\r\n * `reset`\r\n\r\n   Reset animation.\r\n\r\n   ```\r\n   onAnimationEnd(){\r\n     this.refs.myAnimationContainer.reset();\r\n   }\r\n   ```\r\n\r\n\r\n## Usage example\r\n\r\n```javascript\r\n\r\nimport EffectContainer, {Effects} from 'react-magic-effects';\r\n\r\n<EffectContainer ref='myAnimationContainer' effect={Effects.magic}>\r\n  <YourComponent>\r\n</EffectContainer>\r\n```\r\n\r\nSee [example](https://github.com/georgeOsdDev/react-magic-effects/tree/master/example)\r\n\r\n```bash\r\nnpm install\r\nnpm run start:example\r\n```\r\n\r\n## Tests\r\n\r\n```bash\r\nnpm test\r\n```\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}